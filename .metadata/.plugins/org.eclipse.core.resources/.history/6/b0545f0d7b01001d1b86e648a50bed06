package com.kh.controller;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class ELServlet
 */
@WebServlet("/el.do")
public class ELServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public ELServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		// 그동안 수하물을 담을 때 request, session, application, page에 담았음
		// JSP내장객체(== Scope 내장객체)
		/*
		 * 데이터들을 담을 수 있는 JSP 내장객체 종류 4가지
		 * 
		 * 1. ServletContext(application scope)
		 * 한 어플리케이션(웹사이트)당 단 1개 존재하는 객체
		 * 이 영역에 데이터를 담으면 어플리케이션 전역에서 사용 가능
		 * => 공유 범위가 가장 크다.
		 * 
		 * 2. HttpSession (session scope)
		 * 한 브라우저당 1개 존재하는 객체
		 * 이 영역에 데이터를 담으면 jsp/servlet단에서 사용 가능
		 * 값이 한번 담기면 서버가 멈추거나, 브라우저가 닫히기 전까지 사용 가능 (로그인 기능)
		 * => 공유범위가 다소 제한적
		 * 
		 * 3. HttpServletRequest(request scope)
		 * 요청 및 응답 시 매번 생성되는 객체
		 * 이 영역에 데이터를 담으면 해당 request객체를
		 * 포워딩 받는 응답 jsp에서만 사용 가능 
		 * => 공유범위가 해당 요청에 대한 응답 jsp 단 하나뿐(1회성)
		 * 
		 * 4. PageContext(page scope)
		 * 현재 그 jsp페이지에서만 사용 가능
		 * => 공유범위가 가장 작음
		 * 
		 * 
		 */
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
