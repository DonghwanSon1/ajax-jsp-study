/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.79
 * Generated at: 2022-07-12 08:02:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kh.member.model.vo.Member;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/common/menubar.jsp", Long.valueOf(1655691891944L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.kh.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>메인 화면</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<!-- \r\n");
      out.write("		* CRUD : 대부분의 컴퓨터 소프트웨어가 가지는 기본적인 데이터 처리 기능을 묶어서 일컫는 말\r\n");
      out.write("				 사용자 인터페이스가 갖추어야만하는 기능을 가리키는 용어로써도 사용된다.\r\n");
      out.write("		- C : Create(생성) => INSERT \r\n");
      out.write("		- R : Read(읽기/인출) => SELECT\r\n");
      out.write("		- U : Update(갱신) => UPDATE\r\n");
      out.write("		- D : Delete(삭제/파괴) => DELETE\r\n");
      out.write("		\r\n");
      out.write("		* 회원서비스\r\n");
      out.write("		로그인(R), 회원가입(C)-(아이디중복체크(R)), 내정보변경(U), 회원탈퇴(D/U), 마이페이지(R)\r\n");
      out.write("		\r\n");
      out.write("		* 공지사항 서비스\r\n");
      out.write("		공지사항리스트 조회(R), 공지사항 상세조회(R), 공지사항 작성(C), 공지사항 수정(U), 공지사항 삭제(D/U)\r\n");
      out.write("		\r\n");
      out.write("		* 일반 게시판 서비스\r\n");
      out.write("		게시글리스트조회(R)-페이징처리, 게시글 상세조회(R), 게시글 작성(C)-첨부파일1개 업로드, 게시글 수정(U), 게시글 삭제(D/U)\r\n");
      out.write("		(댓글리스트조회(R), 댓글작성(C))\r\n");
      out.write("		\r\n");
      out.write("		* 사진 게시판 서비스\r\n");
      out.write("		사진게시판 리스트 조회(R)-썸네일, 사진게시글상세조회(R), 사진게시판 작성(C)-다중파일업로드\r\n");
      out.write("	 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	");
 com.kh.common.JDBCTemplate.getConnection(); 
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<!--  상단에는 menubar.jsp가 보이게 해줄것 -->\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
 
	Member loginUser = (Member)session.getAttribute("loginUser");
	// 로그인 전 : menubar.jsp가 로딩될때 null
	// 로그인 후 : menubar.jsp가 로딩될때 로그인한 회원의 정보가 담겨있음
	
	// 성공 / 경고메시지 뽑기
	String alertMsg = (String)session.getAttribute("alertMsg");
	// 서비스 요청 전 : alertMsg = null
	// 서비스 요청 후 성공 시 : alertMsg = 메시지문구
	
	String contextPath = request.getContextPath();


      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>나는 메뉴바다</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("    #login-form, #user-info {float: right;}\r\n");
      out.write("\r\n");
      out.write("    #user-info a{\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        color: black;\r\n");
      out.write("        font-size: 12px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .nav-area{background-color: darkcyan;}\r\n");
      out.write("    .menu{\r\n");
      out.write("        display: table-cell;\r\n");
      out.write("        height: 50px;\r\n");
      out.write("        width: 150px;\r\n");
      out.write("    }\r\n");
      out.write("    .menu a{\r\n");
      out.write("        text-decoration: none;\r\n");
      out.write("        color: white;\r\n");
      out.write("        font-size: 20px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("        display: block;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        line-height: 50px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    .menu a:hover{background-color: rgb(0, 80, 82);}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<script>\r\n");
      out.write("		// script 태그 내에서도 스크립틀릿과 같은 jsp요소가 사용 가능\r\n");
      out.write("		var msg = \"");
      out.print( alertMsg);
      out.write("\"; //\"메세지 문구\" / null\r\n");
      out.write("		\r\n");
      out.write("		if(msg != \"null\"){\r\n");
      out.write("			alert(msg);\r\n");
      out.write("			// session에 들어있는 alertMsg키값에 대한 밸류를 지워줘야함!!\r\n");
      out.write("			// 왜냐? menubar.jsp가 로딩될때마다 매번 alert이 뜸 화남\r\n");
      out.write("			// => XX.removeAttribute(\"키값\");\r\n");
      out.write("			");
 session.removeAttribute("alertMsg");
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("	<h1 align=\"center\">자~ 드가자</h1>\r\n");
      out.write("	\r\n");
      out.write("	<div class=\"login-area\">\r\n");
      out.write("		");
 if(loginUser == null) { 
      out.write("\r\n");
      out.write("			<!-- 로그인 전에 보여지는 로그인 form -->\r\n");
      out.write("			<form id=\"login-form\" method=\"post\" action=\"");
      out.print(contextPath );
      out.write("/login.me\">\r\n");
      out.write("				<table>\r\n");
      out.write("					<tr>\r\n");
      out.write("	                    <th>아이디</th>\r\n");
      out.write("	                    <td><input type=\"text\" name=\"userId\" required></td>\r\n");
      out.write("	                </tr>\r\n");
      out.write("	                <tr>\r\n");
      out.write("	                    <th>비밀번호</th>\r\n");
      out.write("	                    <td><input type=\"password\" name=\"userPwd\" required></td>\r\n");
      out.write("	                </tr>\r\n");
      out.write("	                <tr>\r\n");
      out.write("	                    <th colspan=\"2\">\r\n");
      out.write("	                        <button type=\"submit\">로그인</button>\r\n");
      out.write("	                        <button type=\"button\" onclick=\"enrollPage()\">회원가입</button>\r\n");
      out.write("	                    </th>\r\n");
      out.write("	                </tr>\r\n");
      out.write("					\r\n");
      out.write("				</table>\r\n");
      out.write("			</form>\r\n");
      out.write("			\r\n");
      out.write("			<script>\r\n");
      out.write("				function enrollPage(){\r\n");
      out.write("					\r\n");
      out.write("					// 페이지 이동\r\n");
      out.write("					// location.href = \"");
      out.print( contextPath);
      out.write("/views/member/memberEnrollForm.jsp\";\r\n");
      out.write("					// localhost:8001/jsp/views/member/memberEnrollForm.jsp\r\n");
      out.write("					// 웹 애플리케이션의 디렉토리 구조가 url에 노출된다. => 보안에 취약\r\n");
      out.write("					// localhost:8001/jsp/views/member/memberEnrollForm.jsp\r\n");
      out.write("					\r\n");
      out.write("					// 단순한 정적인 페이지 요청이라고 하더라도 반드시 Servlet을 거쳐서 화면을 띄워주자!!\r\n");
      out.write("					// => url에 서블릿 맵핑값만 노출되게끔 하겠다.\r\n");
      out.write("					// localhost:8001/jsp/맵핑값\r\n");
      out.write("\r\n");
      out.write("					location.href = \"");
      out.print( contextPath );
      out.write("/enrollForm.me\";\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			</script>\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		");
 } else { 
      out.write("\r\n");
      out.write("	        <!-- 로그인 성공 후 화면 -->\r\n");
      out.write("	        <div id=\"user-info\">\r\n");
      out.write("	            <b>");
      out.print( loginUser.getUserName() );
      out.write("</b>님 환영합니다.<br><br>\r\n");
      out.write("	            <div align=\"center\">\r\n");
      out.write("	                <a href=\"");
      out.print(contextPath );
      out.write("/myPage.me\">마이페이지</a>\r\n");
      out.write("	                <a href=\"");
      out.print(contextPath );
      out.write("/logout.me\">로그아웃</a>\r\n");
      out.write("	            </div>\r\n");
      out.write("	\r\n");
      out.write("	        </div>\r\n");
      out.write("		");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("    <br clear=\"both\"><br>\r\n");
      out.write("    <div class=\"nav-area\" align=\"center\">\r\n");
      out.write("        <div class=\"menu\"><a href=\"");
      out.print(contextPath );
      out.write("\">HOME</a></div>\r\n");
      out.write("        <div class=\"menu\"><a href=\"");
      out.print(contextPath);
      out.write("/list.no\">공지사항</a></div>\r\n");
      out.write("        <div class=\"menu\"><a href=\"");
      out.print(contextPath);
      out.write("/list.bo?cpage=1\">일반게시판</a></div>\r\n");
      out.write("        <div class=\"menu\"><a href=\"");
      out.print(contextPath);
      out.write("/list.th\">사진게시판</a></div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
